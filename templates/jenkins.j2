# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!

# defaults for jenkins continuous integration server

# pulled in from the init script; makes things easier.
NAME={{jenkins_name}}

# location of java
JAVA={{jenkins_java}}

# arguments to pass to java
JAVA_ARGS="{{ jenkins_java_args|default([])|join(' ') }}"

PIDFILE={{jenkins_pidfile}}

# user and group to be invoked as (default to jenkins)
JENKINS_USER={{jenkins_user}}
JENKINS_GROUP={{jenkins_group}}

# location of the jenkins war file
JENKINS_WAR={{jenkins_war}}

# jenkins home location
JENKINS_HOME={{jenkins_home}}

# set this to false if you don't want Hudson to run by itself
# in this set up, you are expected to provide a servlet container
# to host jenkins.
RUN_STANDALONE={{'true' if jenkins_run_standalone else 'false'}}

# log location.  this may be a syslog facility.priority
JENKINS_LOG={{jenkins_log}}

## Type:        integer(1:9)
## Default:     5
## ServiceRestart: jenkins
#
# Debug level for logs -- the higher the value, the more verbose.
# 5 is INFO.
#
JENKINS_DEBUG_LEVEL="5"

## Type:        yesno
## Default:     no
## ServiceRestart: jenkins
#
# Whether to enable access logging or not.
#
JENKINS_ENABLE_ACCESS_LOG="no"

## Type:        integer
## Default:     100
## ServiceRestart: jenkins
#
# Maximum number of HTTP worker threads.
#
JENKINS_HANDLER_MAX="100"

## Type:        integer
## Default:     20
## ServiceRestart: jenkins
#
# Maximum number of idle HTTP worker threads.
#
JENKINS_HANDLER_IDLE="20"

# OS LIMITS SETUP
#   comment this out to observe /etc/security/limits.conf
#   this is on by default because http://github.com/jenkinsci/jenkins/commit/2fb288474e980d0e7ff9c4a3b768874835a3e92e
#   reported that Ubuntu's PAM configuration doesn't include pam_limits.so, and as a result the # of file
#   descriptors are forced to 1024 regardless of /etc/security/limits.conf
MAXOPENFILES={{ jenkins_maxopenfiles }}

# set the umask to control permission bits of files that Jenkins creates.
#   027 makes files read-only for group and inaccessible for others, which some security sensitive users
#   might consider benefitial, especially if Jenkins runs in a box that's used for multiple purposes.
#   Beware that 027 permission would interfere with sudo scripts that run on the master (JENKINS-25065.)
#
#   Note also that the particularly sensitive part of $JENKINS_HOME (such as credentials) are always
#   written without 'others' access. So the umask values only affect job configuration, build records,
#   that sort of things.
#
#   If commented out, the value from the OS is inherited,  which is normally 022 (as of Ubuntu 12.04,
#   by default umask comes from pam_umask(8) and /etc/login.defs

# UMASK=027

# port for HTTP connector (default 8080; disable with -1)
HTTP_PORT={{jenkins_http_port}}
HTTP_PORT=-1

# servlet context, important if you want to use apache proxying
PREFIX={{jenkins_prefix}}

#See http://winstone.sourceforge.net/#commandLine
# arguments to pass to jenkins.
# --javahome=$JAVA_HOME
# --httpPort=$HTTP_PORT (default 8080; disable with -1)
# --httpsPort=$HTTP_PORT
# --argumentsRealm.passwd.$ADMIN_USER=[password]
# --argumentsRealm.roles.$ADMIN_USER=admin
# --webroot=~/.jenkins/war
# --prefix=$PREFIX

JENKINS_ARGS="--webroot=/var/cache/$NAME/war --httpPort=$HTTP_PORT"
#JENKINS_ARGS="$JENKINS_ARGS --handlerCountMax=$JENKINS_HANDLER_MAX --handlerCountIdle=$JENKINS_HANDLER_IDLE"
#JENKINS_ARGS="$JENKINS_ARGS --directoryListings=false -Djava.io.tmpdir=/target"
#JENKINS_ARGS="$JENKINS_ARGS --httpsPort=443 -httpsKeyStore=/etc/apache2/ssl.crt/albandri.jks --httpsKeyStorePassword=microsoft"
JENKINS_ARGS="$JENKINS_ARGS --prefix=$PREFIX"
