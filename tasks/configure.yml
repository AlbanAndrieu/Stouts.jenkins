---

- name: jenkins-configure | Configure Jenkins Service
  template:
    dest: "{{ jenkins_configuration }}"
    src: jenkins.j2
  register: jenkins_service_configure
  when: ansible_os_family != 'Darwin'
    
#sudo defaults read /Library/LaunchDaemons/org.jenkins-ci
- name: jenkins-configure | Configure Jenkins service (prefix)
  shell: sudo defaults write /Library/LaunchDaemons/org.jenkins-ci prefix {{jenkins_prefix}}
  become: yes
  #register: jenkins_service_configure
  when: ansible_os_family == 'Darwin'
      
- name: jenkins-configure | Configure Jenkins service (port)
  shell: sudo defaults write /Library/LaunchDaemons/org.jenkins-ci httpPort {{jenkins_http_port}}
  become: yes
  #register: jenkins_service_configure
  when: ansible_os_family == 'Darwin'

- name: jenkins-configure | Create home folder
  file:
    mode: 0755
    owner: "{{ jenkins_user }}"
    path: "{{ jenkins_home }}"
    state: directory
  sudo: yes
  ignore_errors: True

- name: jenkins-configure | Ensure Jenkins restarted if needed
  service:
    name: jenkins
    state: restarted
  changed_when: False
  when: jenkins_service_configure.changed and jenkins_restart_enabled

- name: jenkins-configure | Ensure Jenkins running
  service:
    name: jenkins
    state: started
  changed_when: False
  when: not jenkins_service_configure.changed
  
- name: jenkins-configure | Create {{ jenkins_home }} with full rights for vagrant
  file: state=directory mode=0777 path={{ jenkins_home }} owner=vagrant group=vagrant
  sudo: yes
  when: jenkins_remote_enabled

- name: jenkins-configure | Change permission for vagrant
  file: path={{jenkins_home}} owner=vagrant group=vagrant recurse=yes
  sudo: yes
  when: jenkins_remote_enabled

- name: Wait untils Jenkins web API is available
  shell: curl --head --silent {{ jenkins_url }}/cli/
  delay: 10
  retries: 12
  until: result.stdout.find("200 OK") != -1
  register: result
  changed_when: False
  when: jenkins_service_configure.changed

- name: jenkins-configure | Remove Jenkins security init scripts after first startup.
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ jenkins_home }}/init.groovy.d/01-basicSecurity.groovy"
    - "{{ jenkins_home }}/init.groovy.d/10-deleteAllNodes.groovy"
    - "{{ jenkins_home }}/init.groovy.d/11-disableAllJobs.groovy"
    - "{{ jenkins_home }}/init.groovy.d/30-restorePlugins.groovy"
  become: yes

- name: jenkins-configure | Copy jenkins-cli
  get_url: url={{ jenkins_url }}/jnlpJars/jenkins-cli.jar dest={{ jenkins_home }}/jenkins-cli.jar
  register: jenkins_cli
  until: "'OK' in jenkins_cli.msg or 'file already exists' in jenkins_cli.msg"
  retries: 10
  delay: 10

- name: jenkins-configure | Copy Groovy files to init.groovy.d (1)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: '01-basicSecurity.groovy', dest: '{{ jenkins_home }}/init.groovy.d/01-basicSecurity.groovy' }
#    - { src: '10-deleteAllNodes.groovy', dest: '{{ jenkins_home }}/init.groovy.d/10-deleteAllNodes.groovy' }
#    - { src: '11-disableAllJobs.groovy', dest: '{{ jenkins_home }}/init.groovy.d/11-disableAllJobs.groovy' }
    - { src: '13-changeAllJobsEmailNotifications.groovy', dest: '{{ jenkins_home }}/init.groovy.d/13-changeAllJobsEmailNotifications.groovy' }
    - { src: '15-wipeoutWorkspace.groovy', dest: '{{ jenkins_home }}/init.groovy.d/15-wipeoutWorkspace.groovy' }
    - { src: '20-tcpSlaveAgentPort.groovy', dest: '{{ jenkins_home }}/init.groovy.d/20-tcpSlaveAgentPort.groovy' }
    - { src: '30-restorePlugins.groovy', dest: '{{ jenkins_home }}/init.groovy.d/30-restorePlugins.groovy-TODO' }
    - { src: '40-EnableTimestamperPluginOnAllJobs.groovy', dest: '{{ jenkins_home }}/init.groovy.d/40-EnableTimestamperPluginOnAllJobs.groovy' }
    - { src: '41-RemoveAllDisabledModulesInMavenJobs.groovy', dest: '{{ jenkins_home }}/init.groovy.d/41-RemoveAllDisabledModulesInMavenJobs.groovy' }
    - { src: '42-PreselectUsernameInMavenReleaseBuild.groovy', dest: '{{ jenkins_home }}/init.groovy.d/42-PreselectUsernameInMavenReleaseBuild.groovy' }
    - { src: '50-changeNexus.groovy', dest: '{{ jenkins_home }}/init.groovy.d/50-changeNexus.groovy' }
    - { src: '51-changeSonar.groovy', dest: '{{ jenkins_home }}/init.groovy.d/51-changeSonar.groovy' }
#    - { src: '52-changeJenkinsCredentials.groovy', dest: '{{ jenkins_home }}/init.groovy.d/52-changeJenkinsCredentials.groovy' }
#    - { src: '53-changeJDKInstaller.groovy', dest: '{{ jenkins_home }}/init.groovy.d/53-changeJDKInstaller.groovy' }
#    - { src: '54-addActiveDirectoryJenkinsCredentials.groovy', dest: '{{ jenkins_home }}/init.groovy.d/54-addActiveDirectoryJenkinsCredentials.groovy' }
    - { src: '56-changeXvfb.groovy', dest: '{{ jenkins_home }}/init.groovy.d/56-changeXvfb.groovy' }
    - { src: '60-changeMavenJobs.groovy', dest: '{{ jenkins_home }}/init.groovy.d/60-changeMavenJobs.groovy' }
    - { src: '80-addSwarmUser.groovy', dest: '{{ jenkins_home }}/init.groovy.d/80-addSwarmUser.groovy' }
  become: yes

- name: jenkins-configure | Copy Groovy files to init.groovy.d (2)
  copy: src={{ item }} dest={{ jenkins_home }}/init.groovy.d/ owner={{ jenkins_user }} group={{ jenkins_group }} mode=0644
  with_fileglob:
    - "*.groovy"
  become: yes

#- name: jenkins-configure | Run groovy scripts
#  # -i {{ jenkins_remote_rsa }}
#  shell: java -jar {{ jenkins_home }}/jenkins-cli.jar -s {{ jenkins_url }} groovy {{ item }}
#  become: yes
#  with_items:
#    - "{{ jenkins_home }}/init.groovy.d/11-disableAllJobs.groovy"
##    - "{{ jenkins_home }}/init.groovy.d/10-deleteAllNodes.groovy"
#  when: jenkins_groovy_enabled and jenkins_restart_enabled

- name: jenkins-configure | Configure Jenkins System
  template: src=jenkins_system_config.xml.j2 dest={{ jenkins_home }}/jenkins.model.JenkinsLocationConfiguration.xml owner=jenkins group=jenkins force=yes
  notify: jenkins reload configuration

- name: jenkins-configure | Configure log rotation
  template: src=logrotate.conf.j2 dest=/etc/logrotate.d/jenkins.conf
  when: jenkins_logrotate
