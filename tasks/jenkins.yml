---

- name: Ensure jenkins directories exists
  file: state=directory path={{item}} recurse=true
  with_items:
  - "{{jenkins_home}}" 

- name: Configure Jenkins
  template: src={{item}} dest={{jenkins_home}}/{{item}} mode=0755
  with_items:
  - Dockerfile
  register: jenkins_image
  notify: jenkins restart

- name: Rebuild Jenkins
  docker_image:
    path: "{{jenkins_home}}"
    name: jenkins
    force: true
    tag: local
  when: jenkins_image.changed

- name: Start Jenkins
  docker_container:
    image: jenkins:local
    name: jenkins
    restart_policy: always
    networks: "{{jenkins_networks}}"
    user: root
    volumes:
    - "{{jenkins_home}}:/var/jenkins_home"
    - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
    - "{{jenkins_http_host}}:{{jenkins_http_port}}:8080"

- name: Exec commands
  shell: docker exec jenkins {{item}}
  with_items: "{{jenkins_exec}}"
  when: jenkins_exec

- file:
    dest: "{{jenkins_home}}/.ssh"
    state: directory
    mode: "0700"

- import_tasks: ssh.yml
  tags: [jenkins, jenkins-ssh]

- import_tasks: auth.yml
  when: jenkins_proxy_auth
  tags: [jenkins, jenkins-auth]

- import_tasks: nginx.yml
  when: jenkins_proxy == "nginx"
  tags: [jenkins, jenkins-nginx]

- import_tasks: apache.yml
  become: true
  when: jenkins_proxy == "apache"
  tags: [jenkins, jenkins-apache]

- import_tasks: docker.yml
  when: jenkins_docker_containers
  tags: [jenkins, jenkins-docker]
